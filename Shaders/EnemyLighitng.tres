[gd_resource type="Shader" format=2]

[resource]
code = "shader_type canvas_item;

uniform float magnitude = 100f;
vec2 random2(vec2 st){
    st = vec2( dot(st,vec2(127.1,311.7)),
              dot(st,vec2(269.5,183.3)) );
    return -1.0 + 2.0*fract(sin(st)*43758.5453123);
}
float noise(vec2 st) {
    vec2 i = floor(st);
    vec2 f = fract(st);

    vec2 u = f*f*(3.0-2.0*f);

    return mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),
                     dot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),
                mix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),
                     dot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);
}

void light(){

	float ammount = noise(UV*10f+TIME*100f)*15f;

	LIGHT *= vec4(ammount*5f,ammount,ammount,ammount);
}
void vertex(){


	if(abs(noise(UV+TIME))*10f > 0.5){
		VERTEX += vec2(cos(TIME)/5f, sin(TIME)/5f)*2f;
	}
	 else{
		VERTEX += vec2(sin(TIME)/5f, cos(TIME)/5f);
	}
	VERTEX += noise(UV+TIME)*0.5f;
}


"
